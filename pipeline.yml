resources:
  - name: resource-espurna
    icon: github-circle
    type: git
    source:
      uri: https://github.com/xoseperez/espurna.git
      branch: ((branch))

build: &build_espurna
  platform: linux
  image_resource:
    type: docker-image
    source:
      repository: shaguarger/platformio
  inputs:
    - name: resource-espurna
  outputs:
    - name: artifact
  run:
    path: sh
    args:
      - -ec
      - |
        ROOT=$PWD
        cd resource-espurna/code/
        pio run -e $ENVIRONMENT
        cp .pio/build/$ENVIRONMENT/firmware.bin $ROOT/artifact/

deploy: &deploy_controller
  platform: linux
  image_resource:
    type: docker-image
    source:
      repository: appropriate/curl
  inputs:
    - name: artifact 
  run:
    path: sh
    args:
      - -ec
      - |
        if [ "$ESPURNA_TARGET" = "undefined" ]; then
          echo "skipping undefined controller"
          return 0
        fi

        echo "deploying to ${ESPURNA_TARGET}"
        curl -XPOST --digest \
          -u$ESPURNA_USERNAME:$ESPURNA_PASSWORD \
          -H "Content-Type: multipart/form-data" \
          -F "filename=@artifact/firmware.bin" \
          -F "name=\"upgrade\"" http://$ESPURNA_TARGET/upgrade
        echo "done"

jobs:
- name: job-build-espurna-h801
  plan:
  - get: resource-espurna
  - task: build espurna for ((environment.h801))
    params:
      ENVIRONMENT: ((environment.h801))
    config:
      <<: *build_espurna 

  - in_parallel:
    - task: upload to ((controller_1_name))
      params:
        ESPURNA_PASSWORD: ((password))
        ESPURNA_TARGET: ((controller_1))
      config:
        <<: *deploy_controller

    - task: upload to ((controller_2_name))
      params:
        ESPURNA_PASSWORD: ((password))
        ESPURNA_TARGET: ((controller_2))
      config:
        <<: *deploy_controller

    - task: upload to ((controller_3_name))
      params:
        ESPURNA_PASSWORD: ((password))
        ESPURNA_TARGET: ((controller_3))
      config:
        <<: *deploy_controller

    - task: upload to ((controller_5_name))
      params:
        ESPURNA_PASSWORD: ((password))
        ESPURNA_TARGET: ((controller_5))
      config:
        <<: *deploy_controller

    - task: upload to ((controller_6_name))
      params:
        ESPURNA_PASSWORD: ((password))
        ESPURNA_TARGET: ((controller_6))
      config:
        <<: *deploy_controller

    - task: upload to ((controller_7_name))
      params:
        ESPURNA_PASSWORD: ((password))
        ESPURNA_TARGET: ((controller_7))
      config:
        <<: *deploy_controller

    - task: upload to ((controller_8_name))
      params:
        ESPURNA_PASSWORD: ((password))
        ESPURNA_TARGET: ((controller_8))
      config:
        <<: *deploy_controller

    - task: upload to ((controller_9_name))
      config:
        <<: *deploy_controller
      params:
        ESPURNA_PASSWORD: ((password))
        ESPURNA_TARGET: ((controller_9))

- name: job-build-espurna-sonoff-basic
  plan:
  - get: resource-espurna
  - task: build espurna for ((environment.sonoff-basic))
    params:
      ENVIRONMENT: ((environment.sonoff-basic))
    config:
      <<: *build_espurna 
  - in_parallel:
    - task: upload to ((controller_10_name))
      params:
        ESPURNA_PASSWORD: ((password))
        ESPURNA_TARGET: ((controller_10))
      config:
        <<: *deploy_controller

    - task: upload to ((controller_11_name))
      params:
        ESPURNA_PASSWORD: ((password))
        ESPURNA_TARGET: ((controller_11))
      config:
        <<: *deploy_controller

    - task: upload to ((controller_12_name))
      params:
        ESPURNA_PASSWORD: ((password))
        ESPURNA_TARGET: ((controller_12))
      config:
        <<: *deploy_controller

    - task: upload to ((controller_13_name))
      params:
        ESPURNA_PASSWORD: ((password))
        ESPURNA_TARGET: ((controller_13))
      config:
        <<: *deploy_controller

    - task: upload to ((controller_14_name))
      params:
        ESPURNA_PASSWORD: ((password))
        ESPURNA_TARGET: ((controller_14))
      config:
        <<: *deploy_controller

    - task: upload to ((controller_15_name))
      params:
        ESPURNA_PASSWORD: ((password))
        ESPURNA_TARGET: ((controller_15))
      config:
        <<: *deploy_controller

    - task: upload to ((controller_16_name))
      params:
        ESPURNA_PASSWORD: ((password))
        ESPURNA_TARGET: ((controller_16))
      config:
        <<: *deploy_controller

    - task: upload to ((controller_17_name))
      params:
        ESPURNA_PASSWORD: ((password))
        ESPURNA_TARGET: ((controller_17))
      config:
        <<: *deploy_controller

    - task: upload to ((controller_18_name))
      params:
        ESPURNA_PASSWORD: ((password))
        ESPURNA_TARGET: ((controller_18))
      config:
        <<: *deploy_controller

    - task: upload to ((controller_19_name))
      params:
        ESPURNA_PASSWORD: ((password))
        ESPURNA_TARGET: ((controller_19))
      config:
        <<: *deploy_controller